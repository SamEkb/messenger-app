version: '3.8'

services:
  # Zookeeper
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - messenger-network

  # Kafka
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "user-events:1:1"
    depends_on:
      - zookeeper
    networks:
      - messenger-network

  # PostgreSQL
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports: [ "5432:5432" ]
    networks: [ messenger-network ]
    volumes:
      - pgdata:/var/lib/postgresql/data

  # MongoDB
  mongo:
    image: mongo:7
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports: [ "27017:27017" ]
    networks: [ messenger-network ]
    volumes:
      - mongodata:/data/db

  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one:1.50
    container_name: jaeger
    ports:
      - "16686:16686"  # Jaeger UI
      - "14268:14268"  # Jaeger collector HTTP
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - messenger-network

  # Auth Service
  auth-service:
    build:
      context: .
      dockerfile: ./auth-service/Dockerfile
    container_name: auth-service
    ports:
      - "8001:8001"
      - "9001:9001"
      - "9090:9090"
    environment:
      - HTTP_PORT=8001
      - GRPC_PORT=9001
      - KAFKA_BROKERS=kafka:9092
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=auth_db
      # Tracing
      - OTEL_SERVICE_NAME=auth-service
      - OTEL_SERVICE_VERSION=1.0.0
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14268/api/traces
      - OTEL_ENVIRONMENT=development
      - OTEL_TRACING_ENABLED=true
    depends_on:
      - kafka
      - postgres
      - jaeger
    networks:
      - messenger-network
    restart: on-failure

  # Users Service
  users-service:
    build:
      context: .
      dockerfile: ./users-service/Dockerfile
    container_name: users-service
    ports:
      - "8004:8004"
      - "9004:9004"
    environment:
      - HTTP_PORT=8004
      - GRPC_PORT=9004
      - KAFKA_BROKERS=kafka:9092
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=users_db
      # Tracing
      - OTEL_SERVICE_NAME=users-service
      - OTEL_SERVICE_VERSION=1.0.0
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14268/api/traces
      - OTEL_ENVIRONMENT=development
      - OTEL_TRACING_ENABLED=true
    depends_on:
      - kafka
      - postgres
      - jaeger
    networks:
      - messenger-network
    restart: on-failure

  # Friends Service
  friends-service:
    build:
      context: .
      dockerfile: ./friends-service/Dockerfile
    container_name: friends-service
    ports:
      - "8003:8003"
      - "9003:9003"
    environment:
      - HTTP_PORT=8003
      - GRPC_PORT=9003
      - USERS_SERVICE_HOST=users-service
      - USERS_SERVICE_PORT=9004
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=friends_db
      # Tracing
      - OTEL_SERVICE_NAME=friends-service
      - OTEL_SERVICE_VERSION=1.0.0
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14268/api/traces
      - OTEL_ENVIRONMENT=development
      - OTEL_TRACING_ENABLED=true
    depends_on:
      - users-service
      - postgres
      - jaeger
    networks:
      - messenger-network
    restart: on-failure

  # Chat Service
  chat-service:
    build:
      context: .
      dockerfile: ./chat-service/Dockerfile
    container_name: chat-service
    ports:
      - "8002:8002"
      - "9002:9002"
    environment:
      - HTTP_PORT=8002
      - GRPC_PORT=9002
      - USERS_SERVICE_HOST=users-service
      - USERS_SERVICE_PORT=9004
      - FRIENDS_SERVICE_HOST=friends-service
      - FRIENDS_SERVICE_PORT=9003
      - MONGODB_URI=mongodb://root:root@mongo:27017
      - MONGODB_DATABASE=chat_db
      # Tracing
      - OTEL_SERVICE_NAME=chat-service
      - OTEL_SERVICE_VERSION=1.0.0
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14268/api/traces
      - OTEL_ENVIRONMENT=development
      - OTEL_TRACING_ENABLED=true
    depends_on:
      - users-service
      - friends-service
      - mongo
      - jaeger
    networks:
      - messenger-network
    restart: on-failure

networks:
  messenger-network:
    driver: bridge

volumes:
  pgdata:
  mongodata: